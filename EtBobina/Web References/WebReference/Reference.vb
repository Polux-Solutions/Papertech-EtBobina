'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
'
Namespace WebReference
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="Web_Binding", [Namespace]:="urn:microsoft-dynamics-schemas/codeunit/Web")>  _
    Partial Public Class Web
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private CapitalizeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Fecha_TrabajoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DiarioSalidaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DiarioSalida2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private DiarioSalida3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private DiarioSalida4OperationCompleted As System.Threading.SendOrPostCallback
        
        Private DiarioSalida5OperationCompleted As System.Threading.SendOrPostCallback
        
        Private DiarioSalida6OperationCompleted As System.Threading.SendOrPostCallback
        
        Private DiarioSalida7OperationCompleted As System.Threading.SendOrPostCallback
        
        Private RechazosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ScrapOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DiarioSalida_FruverPackOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Verificar_No_BobinaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Verificar_Peso_BobinaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Verificar_No_PaletOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Peso_OF_BobinaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private XML_Peso_BobinaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EliminarDiarioSalidaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Correo_BasculaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Baja_Papel2aStockOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Baja_Papel2aDiarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Baja_Papel2aOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Abrir_OPOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Cambiar_PaletOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Crear_OPOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Correo_PesajeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Copiar_ProyectosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Correo_Resumen_TurnoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Formato_da161aOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Formato_mesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Formato_anyoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Correo_Resumen_DiaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Correo_Diario_MantenimientoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Correo_OTM_PendientesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Minutos_Rotura_DiaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Minutos_Paro_TurnoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Num_Paros_TurnoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Iniciar_ColasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Crear_OP_FechaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Correo_Lab_VariantesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Correo_Albaran_Lab_PruebaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Calcular_peso_BobinadoraOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Calcular_peso_Bobinadora_diaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Minutos_Paro_Turno_NewOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Minutos_Rotura_Dia_NewOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Parada_Fin_TurnoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Plan_Verificacion_AskOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Plan_Verificacion_CounterOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Plan_Verificacion_InsertarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Plan_Verificacion_Insertar2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private Plan_Verificacion_BorrarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Plan_Verificacion_ExisteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Plan_Verificacion_RechazoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Cambio_RolloOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Minutos_Rotura_Dia_10OperationCompleted As System.Threading.SendOrPostCallback
        
        Private Correo_Resumen_Turno_PruebaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Correo_Resumen_Dia_PruebaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Correo_Control_StockOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.EtBobina.My.MySettings.Default.EtBobina_WebReference_ServiciosWeb
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event CapitalizeCompleted As CapitalizeCompletedEventHandler
        
        '''<remarks/>
        Public Event Fecha_TrabajoCompleted As Fecha_TrabajoCompletedEventHandler
        
        '''<remarks/>
        Public Event DiarioSalidaCompleted As DiarioSalidaCompletedEventHandler
        
        '''<remarks/>
        Public Event DiarioSalida2Completed As DiarioSalida2CompletedEventHandler
        
        '''<remarks/>
        Public Event DiarioSalida3Completed As DiarioSalida3CompletedEventHandler
        
        '''<remarks/>
        Public Event DiarioSalida4Completed As DiarioSalida4CompletedEventHandler
        
        '''<remarks/>
        Public Event DiarioSalida5Completed As DiarioSalida5CompletedEventHandler
        
        '''<remarks/>
        Public Event DiarioSalida6Completed As DiarioSalida6CompletedEventHandler
        
        '''<remarks/>
        Public Event DiarioSalida7Completed As DiarioSalida7CompletedEventHandler
        
        '''<remarks/>
        Public Event RechazosCompleted As RechazosCompletedEventHandler
        
        '''<remarks/>
        Public Event ScrapCompleted As ScrapCompletedEventHandler
        
        '''<remarks/>
        Public Event DiarioSalida_FruverPackCompleted As DiarioSalida_FruverPackCompletedEventHandler
        
        '''<remarks/>
        Public Event Verificar_No_BobinaCompleted As Verificar_No_BobinaCompletedEventHandler
        
        '''<remarks/>
        Public Event Verificar_Peso_BobinaCompleted As Verificar_Peso_BobinaCompletedEventHandler
        
        '''<remarks/>
        Public Event Verificar_No_PaletCompleted As Verificar_No_PaletCompletedEventHandler
        
        '''<remarks/>
        Public Event Peso_OF_BobinaCompleted As Peso_OF_BobinaCompletedEventHandler
        
        '''<remarks/>
        Public Event XML_Peso_BobinaCompleted As XML_Peso_BobinaCompletedEventHandler
        
        '''<remarks/>
        Public Event EliminarDiarioSalidaCompleted As EliminarDiarioSalidaCompletedEventHandler
        
        '''<remarks/>
        Public Event Correo_BasculaCompleted As Correo_BasculaCompletedEventHandler
        
        '''<remarks/>
        Public Event Baja_Papel2aStockCompleted As Baja_Papel2aStockCompletedEventHandler
        
        '''<remarks/>
        Public Event Baja_Papel2aDiarioCompleted As Baja_Papel2aDiarioCompletedEventHandler
        
        '''<remarks/>
        Public Event Baja_Papel2aCompleted As Baja_Papel2aCompletedEventHandler
        
        '''<remarks/>
        Public Event Abrir_OPCompleted As Abrir_OPCompletedEventHandler
        
        '''<remarks/>
        Public Event Cambiar_PaletCompleted As Cambiar_PaletCompletedEventHandler
        
        '''<remarks/>
        Public Event Crear_OPCompleted As Crear_OPCompletedEventHandler
        
        '''<remarks/>
        Public Event Correo_PesajeCompleted As Correo_PesajeCompletedEventHandler
        
        '''<remarks/>
        Public Event Copiar_ProyectosCompleted As Copiar_ProyectosCompletedEventHandler
        
        '''<remarks/>
        Public Event Correo_Resumen_TurnoCompleted As Correo_Resumen_TurnoCompletedEventHandler
        
        '''<remarks/>
        Public Event Formato_da161aCompleted As Formato_da161aCompletedEventHandler
        
        '''<remarks/>
        Public Event Formato_mesCompleted As Formato_mesCompletedEventHandler
        
        '''<remarks/>
        Public Event Formato_anyoCompleted As Formato_anyoCompletedEventHandler
        
        '''<remarks/>
        Public Event Correo_Resumen_DiaCompleted As Correo_Resumen_DiaCompletedEventHandler
        
        '''<remarks/>
        Public Event Correo_Diario_MantenimientoCompleted As Correo_Diario_MantenimientoCompletedEventHandler
        
        '''<remarks/>
        Public Event Correo_OTM_PendientesCompleted As Correo_OTM_PendientesCompletedEventHandler
        
        '''<remarks/>
        Public Event Minutos_Rotura_DiaCompleted As Minutos_Rotura_DiaCompletedEventHandler
        
        '''<remarks/>
        Public Event Minutos_Paro_TurnoCompleted As Minutos_Paro_TurnoCompletedEventHandler
        
        '''<remarks/>
        Public Event Num_Paros_TurnoCompleted As Num_Paros_TurnoCompletedEventHandler
        
        '''<remarks/>
        Public Event Iniciar_ColasCompleted As Iniciar_ColasCompletedEventHandler
        
        '''<remarks/>
        Public Event Crear_OP_FechaCompleted As Crear_OP_FechaCompletedEventHandler
        
        '''<remarks/>
        Public Event Correo_Lab_VariantesCompleted As Correo_Lab_VariantesCompletedEventHandler
        
        '''<remarks/>
        Public Event Correo_Albaran_Lab_PruebaCompleted As Correo_Albaran_Lab_PruebaCompletedEventHandler
        
        '''<remarks/>
        Public Event Calcular_peso_BobinadoraCompleted As Calcular_peso_BobinadoraCompletedEventHandler
        
        '''<remarks/>
        Public Event Calcular_peso_Bobinadora_diaCompleted As Calcular_peso_Bobinadora_diaCompletedEventHandler
        
        '''<remarks/>
        Public Event Minutos_Paro_Turno_NewCompleted As Minutos_Paro_Turno_NewCompletedEventHandler
        
        '''<remarks/>
        Public Event Minutos_Rotura_Dia_NewCompleted As Minutos_Rotura_Dia_NewCompletedEventHandler
        
        '''<remarks/>
        Public Event Parada_Fin_TurnoCompleted As Parada_Fin_TurnoCompletedEventHandler
        
        '''<remarks/>
        Public Event Plan_Verificacion_AskCompleted As Plan_Verificacion_AskCompletedEventHandler
        
        '''<remarks/>
        Public Event Plan_Verificacion_CounterCompleted As Plan_Verificacion_CounterCompletedEventHandler
        
        '''<remarks/>
        Public Event Plan_Verificacion_InsertarCompleted As Plan_Verificacion_InsertarCompletedEventHandler
        
        '''<remarks/>
        Public Event Plan_Verificacion_Insertar2Completed As Plan_Verificacion_Insertar2CompletedEventHandler
        
        '''<remarks/>
        Public Event Plan_Verificacion_BorrarCompleted As Plan_Verificacion_BorrarCompletedEventHandler
        
        '''<remarks/>
        Public Event Plan_Verificacion_ExisteCompleted As Plan_Verificacion_ExisteCompletedEventHandler
        
        '''<remarks/>
        Public Event Plan_Verificacion_RechazoCompleted As Plan_Verificacion_RechazoCompletedEventHandler
        
        '''<remarks/>
        Public Event Cambio_RolloCompleted As Cambio_RolloCompletedEventHandler
        
        '''<remarks/>
        Public Event Minutos_Rotura_Dia_10Completed As Minutos_Rotura_Dia_10CompletedEventHandler
        
        '''<remarks/>
        Public Event Correo_Resumen_Turno_PruebaCompleted As Correo_Resumen_Turno_PruebaCompletedEventHandler
        
        '''<remarks/>
        Public Event Correo_Resumen_Dia_PruebaCompleted As Correo_Resumen_Dia_PruebaCompletedEventHandler
        
        '''<remarks/>
        Public Event Correo_Control_StockCompleted As Correo_Control_StockCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Capitalize", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Capitalize_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Capitalize(ByVal texto As String) As <System.Xml.Serialization.XmlElementAttribute("return_value")> String
            Dim results() As Object = Me.Invoke("Capitalize", New Object() {texto})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CapitalizeAsync(ByVal texto As String)
            Me.CapitalizeAsync(texto, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CapitalizeAsync(ByVal texto As String, ByVal userState As Object)
            If (Me.CapitalizeOperationCompleted Is Nothing) Then
                Me.CapitalizeOperationCompleted = AddressOf Me.OnCapitalizeOperationCompleted
            End If
            Me.InvokeAsync("Capitalize", New Object() {texto}, Me.CapitalizeOperationCompleted, userState)
        End Sub
        
        Private Sub OnCapitalizeOperationCompleted(ByVal arg As Object)
            If (Not (Me.CapitalizeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CapitalizeCompleted(Me, New CapitalizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Fecha_Trabajo", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Fecha_Trabajo_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Fecha_Trabajo(ByVal turno As String, ByVal horario As String) As <System.Xml.Serialization.XmlElementAttribute("return_value", DataType:="date")> Date
            Dim results() As Object = Me.Invoke("Fecha_Trabajo", New Object() {turno, horario})
            Return CType(results(0),Date)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Fecha_TrabajoAsync(ByVal turno As String, ByVal horario As String)
            Me.Fecha_TrabajoAsync(turno, horario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Fecha_TrabajoAsync(ByVal turno As String, ByVal horario As String, ByVal userState As Object)
            If (Me.Fecha_TrabajoOperationCompleted Is Nothing) Then
                Me.Fecha_TrabajoOperationCompleted = AddressOf Me.OnFecha_TrabajoOperationCompleted
            End If
            Me.InvokeAsync("Fecha_Trabajo", New Object() {turno, horario}, Me.Fecha_TrabajoOperationCompleted, userState)
        End Sub
        
        Private Sub OnFecha_TrabajoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Fecha_TrabajoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Fecha_TrabajoCompleted(Me, New Fecha_TrabajoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:DiarioSalida", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="DiarioSalida_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DiarioSalida(ByVal turno As String, ByVal horario As String, ByVal noOP As String, ByVal palet As Integer, ByVal rodajas As Integer, ByVal pesoNeto As Decimal, ByVal pesoPalet As Decimal, ByVal metrosRodajas As Integer, ByVal metrosPalet As Integer, ByVal cerrar As Boolean, ByVal actualizarPalet As Boolean)
            Me.Invoke("DiarioSalida", New Object() {turno, horario, noOP, palet, rodajas, pesoNeto, pesoPalet, metrosRodajas, metrosPalet, cerrar, actualizarPalet})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DiarioSalidaAsync(ByVal turno As String, ByVal horario As String, ByVal noOP As String, ByVal palet As Integer, ByVal rodajas As Integer, ByVal pesoNeto As Decimal, ByVal pesoPalet As Decimal, ByVal metrosRodajas As Integer, ByVal metrosPalet As Integer, ByVal cerrar As Boolean, ByVal actualizarPalet As Boolean)
            Me.DiarioSalidaAsync(turno, horario, noOP, palet, rodajas, pesoNeto, pesoPalet, metrosRodajas, metrosPalet, cerrar, actualizarPalet, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DiarioSalidaAsync(ByVal turno As String, ByVal horario As String, ByVal noOP As String, ByVal palet As Integer, ByVal rodajas As Integer, ByVal pesoNeto As Decimal, ByVal pesoPalet As Decimal, ByVal metrosRodajas As Integer, ByVal metrosPalet As Integer, ByVal cerrar As Boolean, ByVal actualizarPalet As Boolean, ByVal userState As Object)
            If (Me.DiarioSalidaOperationCompleted Is Nothing) Then
                Me.DiarioSalidaOperationCompleted = AddressOf Me.OnDiarioSalidaOperationCompleted
            End If
            Me.InvokeAsync("DiarioSalida", New Object() {turno, horario, noOP, palet, rodajas, pesoNeto, pesoPalet, metrosRodajas, metrosPalet, cerrar, actualizarPalet}, Me.DiarioSalidaOperationCompleted, userState)
        End Sub
        
        Private Sub OnDiarioSalidaOperationCompleted(ByVal arg As Object)
            If (Not (Me.DiarioSalidaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DiarioSalidaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:DiarioSalida2", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="DiarioSalida2_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DiarioSalida2(<System.Xml.Serialization.XmlElementAttribute(DataType:="date")> ByVal fecha As Date, ByVal turno As String, ByVal horario As String, ByVal noOP As String, ByVal palet As Integer, ByVal rodajas As Integer, ByVal pesoNeto As Decimal, ByVal pesoPalet As Decimal, ByVal metrosRodajas As Integer, ByVal metrosPalet As Integer, ByVal cerrar As Boolean, ByVal actualizarPalet As Boolean)
            Me.Invoke("DiarioSalida2", New Object() {fecha, turno, horario, noOP, palet, rodajas, pesoNeto, pesoPalet, metrosRodajas, metrosPalet, cerrar, actualizarPalet})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DiarioSalida2Async(ByVal fecha As Date, ByVal turno As String, ByVal horario As String, ByVal noOP As String, ByVal palet As Integer, ByVal rodajas As Integer, ByVal pesoNeto As Decimal, ByVal pesoPalet As Decimal, ByVal metrosRodajas As Integer, ByVal metrosPalet As Integer, ByVal cerrar As Boolean, ByVal actualizarPalet As Boolean)
            Me.DiarioSalida2Async(fecha, turno, horario, noOP, palet, rodajas, pesoNeto, pesoPalet, metrosRodajas, metrosPalet, cerrar, actualizarPalet, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DiarioSalida2Async(ByVal fecha As Date, ByVal turno As String, ByVal horario As String, ByVal noOP As String, ByVal palet As Integer, ByVal rodajas As Integer, ByVal pesoNeto As Decimal, ByVal pesoPalet As Decimal, ByVal metrosRodajas As Integer, ByVal metrosPalet As Integer, ByVal cerrar As Boolean, ByVal actualizarPalet As Boolean, ByVal userState As Object)
            If (Me.DiarioSalida2OperationCompleted Is Nothing) Then
                Me.DiarioSalida2OperationCompleted = AddressOf Me.OnDiarioSalida2OperationCompleted
            End If
            Me.InvokeAsync("DiarioSalida2", New Object() {fecha, turno, horario, noOP, palet, rodajas, pesoNeto, pesoPalet, metrosRodajas, metrosPalet, cerrar, actualizarPalet}, Me.DiarioSalida2OperationCompleted, userState)
        End Sub
        
        Private Sub OnDiarioSalida2OperationCompleted(ByVal arg As Object)
            If (Not (Me.DiarioSalida2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DiarioSalida2Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:DiarioSalida3", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="DiarioSalida3_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DiarioSalida3(<System.Xml.Serialization.XmlElementAttribute(DataType:="date")> ByVal fecha As Date, ByVal turno As String, ByVal horario As String, ByVal noOP As String, ByVal bobinaNo As Integer, ByVal palet As Integer, ByVal rodajas As Integer, ByVal pesoNeto As Decimal, ByVal pesoPalet As Decimal, ByVal metrosRodajas As Integer, ByVal metrosPalet As Integer, ByVal cerrar As Boolean, ByVal actualizarPalet As Boolean)
            Me.Invoke("DiarioSalida3", New Object() {fecha, turno, horario, noOP, bobinaNo, palet, rodajas, pesoNeto, pesoPalet, metrosRodajas, metrosPalet, cerrar, actualizarPalet})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DiarioSalida3Async(ByVal fecha As Date, ByVal turno As String, ByVal horario As String, ByVal noOP As String, ByVal bobinaNo As Integer, ByVal palet As Integer, ByVal rodajas As Integer, ByVal pesoNeto As Decimal, ByVal pesoPalet As Decimal, ByVal metrosRodajas As Integer, ByVal metrosPalet As Integer, ByVal cerrar As Boolean, ByVal actualizarPalet As Boolean)
            Me.DiarioSalida3Async(fecha, turno, horario, noOP, bobinaNo, palet, rodajas, pesoNeto, pesoPalet, metrosRodajas, metrosPalet, cerrar, actualizarPalet, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DiarioSalida3Async(ByVal fecha As Date, ByVal turno As String, ByVal horario As String, ByVal noOP As String, ByVal bobinaNo As Integer, ByVal palet As Integer, ByVal rodajas As Integer, ByVal pesoNeto As Decimal, ByVal pesoPalet As Decimal, ByVal metrosRodajas As Integer, ByVal metrosPalet As Integer, ByVal cerrar As Boolean, ByVal actualizarPalet As Boolean, ByVal userState As Object)
            If (Me.DiarioSalida3OperationCompleted Is Nothing) Then
                Me.DiarioSalida3OperationCompleted = AddressOf Me.OnDiarioSalida3OperationCompleted
            End If
            Me.InvokeAsync("DiarioSalida3", New Object() {fecha, turno, horario, noOP, bobinaNo, palet, rodajas, pesoNeto, pesoPalet, metrosRodajas, metrosPalet, cerrar, actualizarPalet}, Me.DiarioSalida3OperationCompleted, userState)
        End Sub
        
        Private Sub OnDiarioSalida3OperationCompleted(ByVal arg As Object)
            If (Not (Me.DiarioSalida3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DiarioSalida3Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:DiarioSalida4", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="DiarioSalida4_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DiarioSalida4( _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="date")> ByVal fecha As Date,  _
                    ByVal turno As String,  _
                    ByVal horario As String,  _
                    ByVal noOP As String,  _
                    ByVal bobinaNo As Integer,  _
                    ByVal palet As Integer,  _
                    ByVal rodajas As Integer,  _
                    ByVal pesoNeto As Decimal,  _
                    ByVal pesoPalet As Decimal,  _
                    ByVal metrosRodajas As Integer,  _
                    ByVal metrosPalet As Integer,  _
                    ByVal ancho As Integer,  _
                    ByVal gramaje As Integer,  _
                    ByVal calibre As Integer,  _
                    ByVal cerrar As Boolean,  _
                    ByVal actualizarPalet As Boolean)
            Me.Invoke("DiarioSalida4", New Object() {fecha, turno, horario, noOP, bobinaNo, palet, rodajas, pesoNeto, pesoPalet, metrosRodajas, metrosPalet, ancho, gramaje, calibre, cerrar, actualizarPalet})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DiarioSalida4Async( _
                    ByVal fecha As Date,  _
                    ByVal turno As String,  _
                    ByVal horario As String,  _
                    ByVal noOP As String,  _
                    ByVal bobinaNo As Integer,  _
                    ByVal palet As Integer,  _
                    ByVal rodajas As Integer,  _
                    ByVal pesoNeto As Decimal,  _
                    ByVal pesoPalet As Decimal,  _
                    ByVal metrosRodajas As Integer,  _
                    ByVal metrosPalet As Integer,  _
                    ByVal ancho As Integer,  _
                    ByVal gramaje As Integer,  _
                    ByVal calibre As Integer,  _
                    ByVal cerrar As Boolean,  _
                    ByVal actualizarPalet As Boolean)
            Me.DiarioSalida4Async(fecha, turno, horario, noOP, bobinaNo, palet, rodajas, pesoNeto, pesoPalet, metrosRodajas, metrosPalet, ancho, gramaje, calibre, cerrar, actualizarPalet, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DiarioSalida4Async( _
                    ByVal fecha As Date,  _
                    ByVal turno As String,  _
                    ByVal horario As String,  _
                    ByVal noOP As String,  _
                    ByVal bobinaNo As Integer,  _
                    ByVal palet As Integer,  _
                    ByVal rodajas As Integer,  _
                    ByVal pesoNeto As Decimal,  _
                    ByVal pesoPalet As Decimal,  _
                    ByVal metrosRodajas As Integer,  _
                    ByVal metrosPalet As Integer,  _
                    ByVal ancho As Integer,  _
                    ByVal gramaje As Integer,  _
                    ByVal calibre As Integer,  _
                    ByVal cerrar As Boolean,  _
                    ByVal actualizarPalet As Boolean,  _
                    ByVal userState As Object)
            If (Me.DiarioSalida4OperationCompleted Is Nothing) Then
                Me.DiarioSalida4OperationCompleted = AddressOf Me.OnDiarioSalida4OperationCompleted
            End If
            Me.InvokeAsync("DiarioSalida4", New Object() {fecha, turno, horario, noOP, bobinaNo, palet, rodajas, pesoNeto, pesoPalet, metrosRodajas, metrosPalet, ancho, gramaje, calibre, cerrar, actualizarPalet}, Me.DiarioSalida4OperationCompleted, userState)
        End Sub
        
        Private Sub OnDiarioSalida4OperationCompleted(ByVal arg As Object)
            If (Not (Me.DiarioSalida4CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DiarioSalida4Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:DiarioSalida5", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="DiarioSalida5_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DiarioSalida5( _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="date")> ByVal fecha As Date,  _
                    ByVal turno As String,  _
                    ByVal horario As String,  _
                    ByVal noOP As String,  _
                    ByVal bobinaNo As Integer,  _
                    ByVal palet As Integer,  _
                    ByVal rodajas As Integer,  _
                    ByVal pesoNeto As Decimal,  _
                    ByVal pesoPalet As Decimal,  _
                    ByVal metrosRodajas As Integer,  _
                    ByVal metrosPalet As Integer,  _
                    ByVal ancho As Integer,  _
                    ByVal gramaje As Integer,  _
                    ByVal calibre As Integer,  _
                    ByVal cerrar As Boolean,  _
                    ByVal actualizarPalet As Boolean,  _
                    ByVal pulper As Boolean,  _
                    ByVal desclasificado As Boolean)
            Me.Invoke("DiarioSalida5", New Object() {fecha, turno, horario, noOP, bobinaNo, palet, rodajas, pesoNeto, pesoPalet, metrosRodajas, metrosPalet, ancho, gramaje, calibre, cerrar, actualizarPalet, pulper, desclasificado})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DiarioSalida5Async( _
                    ByVal fecha As Date,  _
                    ByVal turno As String,  _
                    ByVal horario As String,  _
                    ByVal noOP As String,  _
                    ByVal bobinaNo As Integer,  _
                    ByVal palet As Integer,  _
                    ByVal rodajas As Integer,  _
                    ByVal pesoNeto As Decimal,  _
                    ByVal pesoPalet As Decimal,  _
                    ByVal metrosRodajas As Integer,  _
                    ByVal metrosPalet As Integer,  _
                    ByVal ancho As Integer,  _
                    ByVal gramaje As Integer,  _
                    ByVal calibre As Integer,  _
                    ByVal cerrar As Boolean,  _
                    ByVal actualizarPalet As Boolean,  _
                    ByVal pulper As Boolean,  _
                    ByVal desclasificado As Boolean)
            Me.DiarioSalida5Async(fecha, turno, horario, noOP, bobinaNo, palet, rodajas, pesoNeto, pesoPalet, metrosRodajas, metrosPalet, ancho, gramaje, calibre, cerrar, actualizarPalet, pulper, desclasificado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DiarioSalida5Async( _
                    ByVal fecha As Date,  _
                    ByVal turno As String,  _
                    ByVal horario As String,  _
                    ByVal noOP As String,  _
                    ByVal bobinaNo As Integer,  _
                    ByVal palet As Integer,  _
                    ByVal rodajas As Integer,  _
                    ByVal pesoNeto As Decimal,  _
                    ByVal pesoPalet As Decimal,  _
                    ByVal metrosRodajas As Integer,  _
                    ByVal metrosPalet As Integer,  _
                    ByVal ancho As Integer,  _
                    ByVal gramaje As Integer,  _
                    ByVal calibre As Integer,  _
                    ByVal cerrar As Boolean,  _
                    ByVal actualizarPalet As Boolean,  _
                    ByVal pulper As Boolean,  _
                    ByVal desclasificado As Boolean,  _
                    ByVal userState As Object)
            If (Me.DiarioSalida5OperationCompleted Is Nothing) Then
                Me.DiarioSalida5OperationCompleted = AddressOf Me.OnDiarioSalida5OperationCompleted
            End If
            Me.InvokeAsync("DiarioSalida5", New Object() {fecha, turno, horario, noOP, bobinaNo, palet, rodajas, pesoNeto, pesoPalet, metrosRodajas, metrosPalet, ancho, gramaje, calibre, cerrar, actualizarPalet, pulper, desclasificado}, Me.DiarioSalida5OperationCompleted, userState)
        End Sub
        
        Private Sub OnDiarioSalida5OperationCompleted(ByVal arg As Object)
            If (Not (Me.DiarioSalida5CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DiarioSalida5Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:DiarioSalida6", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="DiarioSalida6_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DiarioSalida6( _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="date")> ByVal fecha As Date,  _
                    ByVal turno As String,  _
                    ByVal horario As String,  _
                    ByVal noOP As String,  _
                    ByVal bobinaNo As Integer,  _
                    ByVal palet As Integer,  _
                    ByVal rodajas As Integer,  _
                    ByVal pesoNeto As Decimal,  _
                    ByVal pesoPalet As Decimal,  _
                    ByVal metrosRodajas As Integer,  _
                    ByVal metrosPalet As Integer,  _
                    ByVal ancho As Integer,  _
                    ByVal gramaje As Integer,  _
                    ByVal calibre As Integer,  _
                    ByVal cerrar As Boolean,  _
                    ByVal actualizarPalet As Boolean,  _
                    ByVal pulper As Boolean,  _
                    ByVal desclasificado As Boolean,  _
                    ByVal pendienteRevisar As Boolean)
            Me.Invoke("DiarioSalida6", New Object() {fecha, turno, horario, noOP, bobinaNo, palet, rodajas, pesoNeto, pesoPalet, metrosRodajas, metrosPalet, ancho, gramaje, calibre, cerrar, actualizarPalet, pulper, desclasificado, pendienteRevisar})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DiarioSalida6Async( _
                    ByVal fecha As Date,  _
                    ByVal turno As String,  _
                    ByVal horario As String,  _
                    ByVal noOP As String,  _
                    ByVal bobinaNo As Integer,  _
                    ByVal palet As Integer,  _
                    ByVal rodajas As Integer,  _
                    ByVal pesoNeto As Decimal,  _
                    ByVal pesoPalet As Decimal,  _
                    ByVal metrosRodajas As Integer,  _
                    ByVal metrosPalet As Integer,  _
                    ByVal ancho As Integer,  _
                    ByVal gramaje As Integer,  _
                    ByVal calibre As Integer,  _
                    ByVal cerrar As Boolean,  _
                    ByVal actualizarPalet As Boolean,  _
                    ByVal pulper As Boolean,  _
                    ByVal desclasificado As Boolean,  _
                    ByVal pendienteRevisar As Boolean)
            Me.DiarioSalida6Async(fecha, turno, horario, noOP, bobinaNo, palet, rodajas, pesoNeto, pesoPalet, metrosRodajas, metrosPalet, ancho, gramaje, calibre, cerrar, actualizarPalet, pulper, desclasificado, pendienteRevisar, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DiarioSalida6Async( _
                    ByVal fecha As Date,  _
                    ByVal turno As String,  _
                    ByVal horario As String,  _
                    ByVal noOP As String,  _
                    ByVal bobinaNo As Integer,  _
                    ByVal palet As Integer,  _
                    ByVal rodajas As Integer,  _
                    ByVal pesoNeto As Decimal,  _
                    ByVal pesoPalet As Decimal,  _
                    ByVal metrosRodajas As Integer,  _
                    ByVal metrosPalet As Integer,  _
                    ByVal ancho As Integer,  _
                    ByVal gramaje As Integer,  _
                    ByVal calibre As Integer,  _
                    ByVal cerrar As Boolean,  _
                    ByVal actualizarPalet As Boolean,  _
                    ByVal pulper As Boolean,  _
                    ByVal desclasificado As Boolean,  _
                    ByVal pendienteRevisar As Boolean,  _
                    ByVal userState As Object)
            If (Me.DiarioSalida6OperationCompleted Is Nothing) Then
                Me.DiarioSalida6OperationCompleted = AddressOf Me.OnDiarioSalida6OperationCompleted
            End If
            Me.InvokeAsync("DiarioSalida6", New Object() {fecha, turno, horario, noOP, bobinaNo, palet, rodajas, pesoNeto, pesoPalet, metrosRodajas, metrosPalet, ancho, gramaje, calibre, cerrar, actualizarPalet, pulper, desclasificado, pendienteRevisar}, Me.DiarioSalida6OperationCompleted, userState)
        End Sub
        
        Private Sub OnDiarioSalida6OperationCompleted(ByVal arg As Object)
            If (Not (Me.DiarioSalida6CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DiarioSalida6Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:DiarioSalida7", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="DiarioSalida7_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DiarioSalida7( _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="date")> ByVal fecha As Date,  _
                    ByVal turno As String,  _
                    ByVal horario As String,  _
                    ByVal noOP As String,  _
                    ByVal bobinaNo As Integer,  _
                    ByVal palet As Integer,  _
                    ByVal rodajas As Integer,  _
                    ByVal pesoNeto As Decimal,  _
                    ByVal pesoPalet As Decimal,  _
                    ByVal metrosRodajas As Integer,  _
                    ByVal metrosPalet As Integer,  _
                    ByVal ancho As Integer,  _
                    ByVal gramaje As Integer,  _
                    ByVal calibre As Integer,  _
                    ByVal cerrar As Boolean,  _
                    ByVal actualizarPalet As Boolean,  _
                    ByVal pulper As Boolean,  _
                    ByVal desclasificado As Boolean,  _
                    ByVal pendienteRevisar As Boolean,  _
                    ByVal cZZ_Ancho As Decimal,  _
                    ByVal cZZ_Rodajas As Integer)
            Me.Invoke("DiarioSalida7", New Object() {fecha, turno, horario, noOP, bobinaNo, palet, rodajas, pesoNeto, pesoPalet, metrosRodajas, metrosPalet, ancho, gramaje, calibre, cerrar, actualizarPalet, pulper, desclasificado, pendienteRevisar, cZZ_Ancho, cZZ_Rodajas})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DiarioSalida7Async( _
                    ByVal fecha As Date,  _
                    ByVal turno As String,  _
                    ByVal horario As String,  _
                    ByVal noOP As String,  _
                    ByVal bobinaNo As Integer,  _
                    ByVal palet As Integer,  _
                    ByVal rodajas As Integer,  _
                    ByVal pesoNeto As Decimal,  _
                    ByVal pesoPalet As Decimal,  _
                    ByVal metrosRodajas As Integer,  _
                    ByVal metrosPalet As Integer,  _
                    ByVal ancho As Integer,  _
                    ByVal gramaje As Integer,  _
                    ByVal calibre As Integer,  _
                    ByVal cerrar As Boolean,  _
                    ByVal actualizarPalet As Boolean,  _
                    ByVal pulper As Boolean,  _
                    ByVal desclasificado As Boolean,  _
                    ByVal pendienteRevisar As Boolean,  _
                    ByVal cZZ_Ancho As Decimal,  _
                    ByVal cZZ_Rodajas As Integer)
            Me.DiarioSalida7Async(fecha, turno, horario, noOP, bobinaNo, palet, rodajas, pesoNeto, pesoPalet, metrosRodajas, metrosPalet, ancho, gramaje, calibre, cerrar, actualizarPalet, pulper, desclasificado, pendienteRevisar, cZZ_Ancho, cZZ_Rodajas, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DiarioSalida7Async( _
                    ByVal fecha As Date,  _
                    ByVal turno As String,  _
                    ByVal horario As String,  _
                    ByVal noOP As String,  _
                    ByVal bobinaNo As Integer,  _
                    ByVal palet As Integer,  _
                    ByVal rodajas As Integer,  _
                    ByVal pesoNeto As Decimal,  _
                    ByVal pesoPalet As Decimal,  _
                    ByVal metrosRodajas As Integer,  _
                    ByVal metrosPalet As Integer,  _
                    ByVal ancho As Integer,  _
                    ByVal gramaje As Integer,  _
                    ByVal calibre As Integer,  _
                    ByVal cerrar As Boolean,  _
                    ByVal actualizarPalet As Boolean,  _
                    ByVal pulper As Boolean,  _
                    ByVal desclasificado As Boolean,  _
                    ByVal pendienteRevisar As Boolean,  _
                    ByVal cZZ_Ancho As Decimal,  _
                    ByVal cZZ_Rodajas As Integer,  _
                    ByVal userState As Object)
            If (Me.DiarioSalida7OperationCompleted Is Nothing) Then
                Me.DiarioSalida7OperationCompleted = AddressOf Me.OnDiarioSalida7OperationCompleted
            End If
            Me.InvokeAsync("DiarioSalida7", New Object() {fecha, turno, horario, noOP, bobinaNo, palet, rodajas, pesoNeto, pesoPalet, metrosRodajas, metrosPalet, ancho, gramaje, calibre, cerrar, actualizarPalet, pulper, desclasificado, pendienteRevisar, cZZ_Ancho, cZZ_Rodajas}, Me.DiarioSalida7OperationCompleted, userState)
        End Sub
        
        Private Sub OnDiarioSalida7OperationCompleted(ByVal arg As Object)
            If (Not (Me.DiarioSalida7CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DiarioSalida7Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Rechazos", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Rechazos_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Rechazos(ByVal xCodigo As String, ByVal xBobina As String, ByVal xRodajas As Integer, ByVal xPesoEstimado As Integer)
            Me.Invoke("Rechazos", New Object() {xCodigo, xBobina, xRodajas, xPesoEstimado})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RechazosAsync(ByVal xCodigo As String, ByVal xBobina As String, ByVal xRodajas As Integer, ByVal xPesoEstimado As Integer)
            Me.RechazosAsync(xCodigo, xBobina, xRodajas, xPesoEstimado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RechazosAsync(ByVal xCodigo As String, ByVal xBobina As String, ByVal xRodajas As Integer, ByVal xPesoEstimado As Integer, ByVal userState As Object)
            If (Me.RechazosOperationCompleted Is Nothing) Then
                Me.RechazosOperationCompleted = AddressOf Me.OnRechazosOperationCompleted
            End If
            Me.InvokeAsync("Rechazos", New Object() {xCodigo, xBobina, xRodajas, xPesoEstimado}, Me.RechazosOperationCompleted, userState)
        End Sub
        
        Private Sub OnRechazosOperationCompleted(ByVal arg As Object)
            If (Not (Me.RechazosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RechazosCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Scrap", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Scrap_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Scrap(ByVal _OP As String, ByVal _Bobina As Integer, ByVal _ScrapCode As String, ByVal _Cantidad As Decimal)
            Me.Invoke("Scrap", New Object() {_OP, _Bobina, _ScrapCode, _Cantidad})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ScrapAsync(ByVal _OP As String, ByVal _Bobina As Integer, ByVal _ScrapCode As String, ByVal _Cantidad As Decimal)
            Me.ScrapAsync(_OP, _Bobina, _ScrapCode, _Cantidad, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ScrapAsync(ByVal _OP As String, ByVal _Bobina As Integer, ByVal _ScrapCode As String, ByVal _Cantidad As Decimal, ByVal userState As Object)
            If (Me.ScrapOperationCompleted Is Nothing) Then
                Me.ScrapOperationCompleted = AddressOf Me.OnScrapOperationCompleted
            End If
            Me.InvokeAsync("Scrap", New Object() {_OP, _Bobina, _ScrapCode, _Cantidad}, Me.ScrapOperationCompleted, userState)
        End Sub
        
        Private Sub OnScrapOperationCompleted(ByVal arg As Object)
            If (Not (Me.ScrapCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ScrapCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:DiarioSalida_FruverPack", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="DiarioSalida_FruverPack_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DiarioSalida_FruverPack( _
                    <System.Xml.Serialization.XmlElementAttribute(DataType:="date")> ByVal fecha As Date,  _
                    ByVal turno As String,  _
                    ByVal horario As String,  _
                    ByVal noOP As String,  _
                    ByVal bobinaNo As Integer,  _
                    ByVal palet As Integer,  _
                    ByVal rodajas As Integer,  _
                    ByVal pesoNeto As Decimal,  _
                    ByVal pesoPalet As Decimal,  _
                    ByVal metrosRodajas As Integer,  _
                    ByVal metrosPalet As Integer,  _
                    ByVal ancho As Integer,  _
                    ByVal gramaje As Integer,  _
                    ByVal calibre As Integer,  _
                    ByVal cerrar As Boolean,  _
                    ByVal actualizarPalet As Boolean,  _
                    ByVal pendienteRevisar As Boolean)
            Me.Invoke("DiarioSalida_FruverPack", New Object() {fecha, turno, horario, noOP, bobinaNo, palet, rodajas, pesoNeto, pesoPalet, metrosRodajas, metrosPalet, ancho, gramaje, calibre, cerrar, actualizarPalet, pendienteRevisar})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DiarioSalida_FruverPackAsync( _
                    ByVal fecha As Date,  _
                    ByVal turno As String,  _
                    ByVal horario As String,  _
                    ByVal noOP As String,  _
                    ByVal bobinaNo As Integer,  _
                    ByVal palet As Integer,  _
                    ByVal rodajas As Integer,  _
                    ByVal pesoNeto As Decimal,  _
                    ByVal pesoPalet As Decimal,  _
                    ByVal metrosRodajas As Integer,  _
                    ByVal metrosPalet As Integer,  _
                    ByVal ancho As Integer,  _
                    ByVal gramaje As Integer,  _
                    ByVal calibre As Integer,  _
                    ByVal cerrar As Boolean,  _
                    ByVal actualizarPalet As Boolean,  _
                    ByVal pendienteRevisar As Boolean)
            Me.DiarioSalida_FruverPackAsync(fecha, turno, horario, noOP, bobinaNo, palet, rodajas, pesoNeto, pesoPalet, metrosRodajas, metrosPalet, ancho, gramaje, calibre, cerrar, actualizarPalet, pendienteRevisar, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DiarioSalida_FruverPackAsync( _
                    ByVal fecha As Date,  _
                    ByVal turno As String,  _
                    ByVal horario As String,  _
                    ByVal noOP As String,  _
                    ByVal bobinaNo As Integer,  _
                    ByVal palet As Integer,  _
                    ByVal rodajas As Integer,  _
                    ByVal pesoNeto As Decimal,  _
                    ByVal pesoPalet As Decimal,  _
                    ByVal metrosRodajas As Integer,  _
                    ByVal metrosPalet As Integer,  _
                    ByVal ancho As Integer,  _
                    ByVal gramaje As Integer,  _
                    ByVal calibre As Integer,  _
                    ByVal cerrar As Boolean,  _
                    ByVal actualizarPalet As Boolean,  _
                    ByVal pendienteRevisar As Boolean,  _
                    ByVal userState As Object)
            If (Me.DiarioSalida_FruverPackOperationCompleted Is Nothing) Then
                Me.DiarioSalida_FruverPackOperationCompleted = AddressOf Me.OnDiarioSalida_FruverPackOperationCompleted
            End If
            Me.InvokeAsync("DiarioSalida_FruverPack", New Object() {fecha, turno, horario, noOP, bobinaNo, palet, rodajas, pesoNeto, pesoPalet, metrosRodajas, metrosPalet, ancho, gramaje, calibre, cerrar, actualizarPalet, pendienteRevisar}, Me.DiarioSalida_FruverPackOperationCompleted, userState)
        End Sub
        
        Private Sub OnDiarioSalida_FruverPackOperationCompleted(ByVal arg As Object)
            If (Not (Me.DiarioSalida_FruverPackCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DiarioSalida_FruverPackCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Verificar_No_Bobina", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Verificar_No_Bobina_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Verificar_No_Bobina(ByVal oP As String, ByVal bobina As Integer) As <System.Xml.Serialization.XmlElementAttribute("return_value")> Boolean
            Dim results() As Object = Me.Invoke("Verificar_No_Bobina", New Object() {oP, bobina})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Verificar_No_BobinaAsync(ByVal oP As String, ByVal bobina As Integer)
            Me.Verificar_No_BobinaAsync(oP, bobina, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Verificar_No_BobinaAsync(ByVal oP As String, ByVal bobina As Integer, ByVal userState As Object)
            If (Me.Verificar_No_BobinaOperationCompleted Is Nothing) Then
                Me.Verificar_No_BobinaOperationCompleted = AddressOf Me.OnVerificar_No_BobinaOperationCompleted
            End If
            Me.InvokeAsync("Verificar_No_Bobina", New Object() {oP, bobina}, Me.Verificar_No_BobinaOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificar_No_BobinaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Verificar_No_BobinaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Verificar_No_BobinaCompleted(Me, New Verificar_No_BobinaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Verificar_Peso_Bobina", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Verificar_Peso_Bobina_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Verificar_Peso_Bobina(ByVal oP As String, ByVal bobina As Integer, ByVal pesoPalet As Integer) As <System.Xml.Serialization.XmlElementAttribute("return_value")> Boolean
            Dim results() As Object = Me.Invoke("Verificar_Peso_Bobina", New Object() {oP, bobina, pesoPalet})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Verificar_Peso_BobinaAsync(ByVal oP As String, ByVal bobina As Integer, ByVal pesoPalet As Integer)
            Me.Verificar_Peso_BobinaAsync(oP, bobina, pesoPalet, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Verificar_Peso_BobinaAsync(ByVal oP As String, ByVal bobina As Integer, ByVal pesoPalet As Integer, ByVal userState As Object)
            If (Me.Verificar_Peso_BobinaOperationCompleted Is Nothing) Then
                Me.Verificar_Peso_BobinaOperationCompleted = AddressOf Me.OnVerificar_Peso_BobinaOperationCompleted
            End If
            Me.InvokeAsync("Verificar_Peso_Bobina", New Object() {oP, bobina, pesoPalet}, Me.Verificar_Peso_BobinaOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificar_Peso_BobinaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Verificar_Peso_BobinaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Verificar_Peso_BobinaCompleted(Me, New Verificar_Peso_BobinaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Verificar_No_Palet", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Verificar_No_Palet_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Verificar_No_Palet(ByVal palet As Integer) As <System.Xml.Serialization.XmlElementAttribute("return_value")> Boolean
            Dim results() As Object = Me.Invoke("Verificar_No_Palet", New Object() {palet})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Verificar_No_PaletAsync(ByVal palet As Integer)
            Me.Verificar_No_PaletAsync(palet, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Verificar_No_PaletAsync(ByVal palet As Integer, ByVal userState As Object)
            If (Me.Verificar_No_PaletOperationCompleted Is Nothing) Then
                Me.Verificar_No_PaletOperationCompleted = AddressOf Me.OnVerificar_No_PaletOperationCompleted
            End If
            Me.InvokeAsync("Verificar_No_Palet", New Object() {palet}, Me.Verificar_No_PaletOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerificar_No_PaletOperationCompleted(ByVal arg As Object)
            If (Not (Me.Verificar_No_PaletCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Verificar_No_PaletCompleted(Me, New Verificar_No_PaletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Peso_OF_Bobina", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Peso_OF_Bobina_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Peso_OF_Bobina(ByVal xOF As String, ByVal xBobina As Integer, ByVal generarXML As Boolean, ByVal xAnyo As Integer) As <System.Xml.Serialization.XmlElementAttribute("return_value")> Integer
            Dim results() As Object = Me.Invoke("Peso_OF_Bobina", New Object() {xOF, xBobina, generarXML, xAnyo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Peso_OF_BobinaAsync(ByVal xOF As String, ByVal xBobina As Integer, ByVal generarXML As Boolean, ByVal xAnyo As Integer)
            Me.Peso_OF_BobinaAsync(xOF, xBobina, generarXML, xAnyo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Peso_OF_BobinaAsync(ByVal xOF As String, ByVal xBobina As Integer, ByVal generarXML As Boolean, ByVal xAnyo As Integer, ByVal userState As Object)
            If (Me.Peso_OF_BobinaOperationCompleted Is Nothing) Then
                Me.Peso_OF_BobinaOperationCompleted = AddressOf Me.OnPeso_OF_BobinaOperationCompleted
            End If
            Me.InvokeAsync("Peso_OF_Bobina", New Object() {xOF, xBobina, generarXML, xAnyo}, Me.Peso_OF_BobinaOperationCompleted, userState)
        End Sub
        
        Private Sub OnPeso_OF_BobinaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Peso_OF_BobinaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Peso_OF_BobinaCompleted(Me, New Peso_OF_BobinaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:XML_Peso_Bobina", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="XML_Peso_Bobina_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function XML_Peso_Bobina(ByVal xOF As String, ByVal xBobina As Integer) As <System.Xml.Serialization.XmlElementAttribute("return_value")> String
            Dim results() As Object = Me.Invoke("XML_Peso_Bobina", New Object() {xOF, xBobina})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub XML_Peso_BobinaAsync(ByVal xOF As String, ByVal xBobina As Integer)
            Me.XML_Peso_BobinaAsync(xOF, xBobina, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub XML_Peso_BobinaAsync(ByVal xOF As String, ByVal xBobina As Integer, ByVal userState As Object)
            If (Me.XML_Peso_BobinaOperationCompleted Is Nothing) Then
                Me.XML_Peso_BobinaOperationCompleted = AddressOf Me.OnXML_Peso_BobinaOperationCompleted
            End If
            Me.InvokeAsync("XML_Peso_Bobina", New Object() {xOF, xBobina}, Me.XML_Peso_BobinaOperationCompleted, userState)
        End Sub
        
        Private Sub OnXML_Peso_BobinaOperationCompleted(ByVal arg As Object)
            If (Not (Me.XML_Peso_BobinaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent XML_Peso_BobinaCompleted(Me, New XML_Peso_BobinaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:EliminarDiarioSalida", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="EliminarDiarioSalida_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EliminarDiarioSalida(ByVal noReserva As Integer, ByVal orden As String, ByVal referencia As String, ByVal variante As String, ByVal cantidad As Integer) As <System.Xml.Serialization.XmlElementAttribute("return_value")> Integer
            Dim results() As Object = Me.Invoke("EliminarDiarioSalida", New Object() {noReserva, orden, referencia, variante, cantidad})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EliminarDiarioSalidaAsync(ByVal noReserva As Integer, ByVal orden As String, ByVal referencia As String, ByVal variante As String, ByVal cantidad As Integer)
            Me.EliminarDiarioSalidaAsync(noReserva, orden, referencia, variante, cantidad, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EliminarDiarioSalidaAsync(ByVal noReserva As Integer, ByVal orden As String, ByVal referencia As String, ByVal variante As String, ByVal cantidad As Integer, ByVal userState As Object)
            If (Me.EliminarDiarioSalidaOperationCompleted Is Nothing) Then
                Me.EliminarDiarioSalidaOperationCompleted = AddressOf Me.OnEliminarDiarioSalidaOperationCompleted
            End If
            Me.InvokeAsync("EliminarDiarioSalida", New Object() {noReserva, orden, referencia, variante, cantidad}, Me.EliminarDiarioSalidaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEliminarDiarioSalidaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EliminarDiarioSalidaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EliminarDiarioSalidaCompleted(Me, New EliminarDiarioSalidaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Correo_Bascula", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Correo_Bascula_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Correo_Bascula(ByVal texto As String, ByVal asunto As String)
            Me.Invoke("Correo_Bascula", New Object() {texto, asunto})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Correo_BasculaAsync(ByVal texto As String, ByVal asunto As String)
            Me.Correo_BasculaAsync(texto, asunto, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Correo_BasculaAsync(ByVal texto As String, ByVal asunto As String, ByVal userState As Object)
            If (Me.Correo_BasculaOperationCompleted Is Nothing) Then
                Me.Correo_BasculaOperationCompleted = AddressOf Me.OnCorreo_BasculaOperationCompleted
            End If
            Me.InvokeAsync("Correo_Bascula", New Object() {texto, asunto}, Me.Correo_BasculaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCorreo_BasculaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Correo_BasculaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Correo_BasculaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Baja_Papel2aStock", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Baja_Papel2aStock_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Baja_Papel2aStock(ByVal empleado As String, ByVal lote As String)
            Me.Invoke("Baja_Papel2aStock", New Object() {empleado, lote})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Baja_Papel2aStockAsync(ByVal empleado As String, ByVal lote As String)
            Me.Baja_Papel2aStockAsync(empleado, lote, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Baja_Papel2aStockAsync(ByVal empleado As String, ByVal lote As String, ByVal userState As Object)
            If (Me.Baja_Papel2aStockOperationCompleted Is Nothing) Then
                Me.Baja_Papel2aStockOperationCompleted = AddressOf Me.OnBaja_Papel2aStockOperationCompleted
            End If
            Me.InvokeAsync("Baja_Papel2aStock", New Object() {empleado, lote}, Me.Baja_Papel2aStockOperationCompleted, userState)
        End Sub
        
        Private Sub OnBaja_Papel2aStockOperationCompleted(ByVal arg As Object)
            If (Not (Me.Baja_Papel2aStockCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Baja_Papel2aStockCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Baja_Papel2aDiario", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Baja_Papel2aDiario_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Baja_Papel2aDiario(ByVal empleado As String, ByVal loteNo As String)
            Me.Invoke("Baja_Papel2aDiario", New Object() {empleado, loteNo})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Baja_Papel2aDiarioAsync(ByVal empleado As String, ByVal loteNo As String)
            Me.Baja_Papel2aDiarioAsync(empleado, loteNo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Baja_Papel2aDiarioAsync(ByVal empleado As String, ByVal loteNo As String, ByVal userState As Object)
            If (Me.Baja_Papel2aDiarioOperationCompleted Is Nothing) Then
                Me.Baja_Papel2aDiarioOperationCompleted = AddressOf Me.OnBaja_Papel2aDiarioOperationCompleted
            End If
            Me.InvokeAsync("Baja_Papel2aDiario", New Object() {empleado, loteNo}, Me.Baja_Papel2aDiarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnBaja_Papel2aDiarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.Baja_Papel2aDiarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Baja_Papel2aDiarioCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Baja_Papel2a", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Baja_Papel2a_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Baja_Papel2a(ByVal entryNo As Integer)
            Me.Invoke("Baja_Papel2a", New Object() {entryNo})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Baja_Papel2aAsync(ByVal entryNo As Integer)
            Me.Baja_Papel2aAsync(entryNo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Baja_Papel2aAsync(ByVal entryNo As Integer, ByVal userState As Object)
            If (Me.Baja_Papel2aOperationCompleted Is Nothing) Then
                Me.Baja_Papel2aOperationCompleted = AddressOf Me.OnBaja_Papel2aOperationCompleted
            End If
            Me.InvokeAsync("Baja_Papel2a", New Object() {entryNo}, Me.Baja_Papel2aOperationCompleted, userState)
        End Sub
        
        Private Sub OnBaja_Papel2aOperationCompleted(ByVal arg As Object)
            If (Not (Me.Baja_Papel2aCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Baja_Papel2aCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Abrir_OP", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Abrir_OP_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Abrir_OP(ByVal noOP As String)
            Me.Invoke("Abrir_OP", New Object() {noOP})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Abrir_OPAsync(ByVal noOP As String)
            Me.Abrir_OPAsync(noOP, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Abrir_OPAsync(ByVal noOP As String, ByVal userState As Object)
            If (Me.Abrir_OPOperationCompleted Is Nothing) Then
                Me.Abrir_OPOperationCompleted = AddressOf Me.OnAbrir_OPOperationCompleted
            End If
            Me.InvokeAsync("Abrir_OP", New Object() {noOP}, Me.Abrir_OPOperationCompleted, userState)
        End Sub
        
        Private Sub OnAbrir_OPOperationCompleted(ByVal arg As Object)
            If (Not (Me.Abrir_OPCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Abrir_OPCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Cambiar_Palet", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Cambiar_Palet_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Cambiar_Palet(ByVal palet As Integer)
            Me.Invoke("Cambiar_Palet", New Object() {palet})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Cambiar_PaletAsync(ByVal palet As Integer)
            Me.Cambiar_PaletAsync(palet, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Cambiar_PaletAsync(ByVal palet As Integer, ByVal userState As Object)
            If (Me.Cambiar_PaletOperationCompleted Is Nothing) Then
                Me.Cambiar_PaletOperationCompleted = AddressOf Me.OnCambiar_PaletOperationCompleted
            End If
            Me.InvokeAsync("Cambiar_Palet", New Object() {palet}, Me.Cambiar_PaletOperationCompleted, userState)
        End Sub
        
        Private Sub OnCambiar_PaletOperationCompleted(ByVal arg As Object)
            If (Not (Me.Cambiar_PaletCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Cambiar_PaletCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Crear_OP", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Crear_OP_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Crear_OP(ByVal pedido As String, ByVal la161nea As Integer, ByVal referencia As String, ByVal variante As String, ByVal almaca130n As String, ByVal cantidad As Decimal, ByVal refExterna As String, ByVal observaciones As String) As <System.Xml.Serialization.XmlElementAttribute("return_value")> String
            Dim results() As Object = Me.Invoke("Crear_OP", New Object() {pedido, la161nea, referencia, variante, almaca130n, cantidad, refExterna, observaciones})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Crear_OPAsync(ByVal pedido As String, ByVal la161nea As Integer, ByVal referencia As String, ByVal variante As String, ByVal almaca130n As String, ByVal cantidad As Decimal, ByVal refExterna As String, ByVal observaciones As String)
            Me.Crear_OPAsync(pedido, la161nea, referencia, variante, almaca130n, cantidad, refExterna, observaciones, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Crear_OPAsync(ByVal pedido As String, ByVal la161nea As Integer, ByVal referencia As String, ByVal variante As String, ByVal almaca130n As String, ByVal cantidad As Decimal, ByVal refExterna As String, ByVal observaciones As String, ByVal userState As Object)
            If (Me.Crear_OPOperationCompleted Is Nothing) Then
                Me.Crear_OPOperationCompleted = AddressOf Me.OnCrear_OPOperationCompleted
            End If
            Me.InvokeAsync("Crear_OP", New Object() {pedido, la161nea, referencia, variante, almaca130n, cantidad, refExterna, observaciones}, Me.Crear_OPOperationCompleted, userState)
        End Sub
        
        Private Sub OnCrear_OPOperationCompleted(ByVal arg As Object)
            If (Not (Me.Crear_OPCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Crear_OPCompleted(Me, New Crear_OPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Correo_Pesaje", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Correo_Pesaje_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Correo_Pesaje(ByVal _Proveedor As String, ByVal _Matricula As String, ByVal _Referencia As String, ByVal _Albaran As String, ByVal _Ubicacion As String)
            Me.Invoke("Correo_Pesaje", New Object() {_Proveedor, _Matricula, _Referencia, _Albaran, _Ubicacion})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Correo_PesajeAsync(ByVal _Proveedor As String, ByVal _Matricula As String, ByVal _Referencia As String, ByVal _Albaran As String, ByVal _Ubicacion As String)
            Me.Correo_PesajeAsync(_Proveedor, _Matricula, _Referencia, _Albaran, _Ubicacion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Correo_PesajeAsync(ByVal _Proveedor As String, ByVal _Matricula As String, ByVal _Referencia As String, ByVal _Albaran As String, ByVal _Ubicacion As String, ByVal userState As Object)
            If (Me.Correo_PesajeOperationCompleted Is Nothing) Then
                Me.Correo_PesajeOperationCompleted = AddressOf Me.OnCorreo_PesajeOperationCompleted
            End If
            Me.InvokeAsync("Correo_Pesaje", New Object() {_Proveedor, _Matricula, _Referencia, _Albaran, _Ubicacion}, Me.Correo_PesajeOperationCompleted, userState)
        End Sub
        
        Private Sub OnCorreo_PesajeOperationCompleted(ByVal arg As Object)
            If (Not (Me.Correo_PesajeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Correo_PesajeCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Copiar_Proyectos", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Copiar_Proyectos_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Copiar_Proyectos()
            Me.Invoke("Copiar_Proyectos", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Copiar_ProyectosAsync()
            Me.Copiar_ProyectosAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Copiar_ProyectosAsync(ByVal userState As Object)
            If (Me.Copiar_ProyectosOperationCompleted Is Nothing) Then
                Me.Copiar_ProyectosOperationCompleted = AddressOf Me.OnCopiar_ProyectosOperationCompleted
            End If
            Me.InvokeAsync("Copiar_Proyectos", New Object(-1) {}, Me.Copiar_ProyectosOperationCompleted, userState)
        End Sub
        
        Private Sub OnCopiar_ProyectosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Copiar_ProyectosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Copiar_ProyectosCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Correo_Resumen_Turno", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Correo_Resumen_Turno_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Correo_Resumen_Turno(<System.Xml.Serialization.XmlElementAttribute(DataType:="date")> ByVal xFecha As Date, ByVal xTurno As Integer)
            Me.Invoke("Correo_Resumen_Turno", New Object() {xFecha, xTurno})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Correo_Resumen_TurnoAsync(ByVal xFecha As Date, ByVal xTurno As Integer)
            Me.Correo_Resumen_TurnoAsync(xFecha, xTurno, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Correo_Resumen_TurnoAsync(ByVal xFecha As Date, ByVal xTurno As Integer, ByVal userState As Object)
            If (Me.Correo_Resumen_TurnoOperationCompleted Is Nothing) Then
                Me.Correo_Resumen_TurnoOperationCompleted = AddressOf Me.OnCorreo_Resumen_TurnoOperationCompleted
            End If
            Me.InvokeAsync("Correo_Resumen_Turno", New Object() {xFecha, xTurno}, Me.Correo_Resumen_TurnoOperationCompleted, userState)
        End Sub
        
        Private Sub OnCorreo_Resumen_TurnoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Correo_Resumen_TurnoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Correo_Resumen_TurnoCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Formato_da161a", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Formato_da161a_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Formato_da161a(ByVal _da161a As Integer) As <System.Xml.Serialization.XmlElementAttribute("return_value")> String
            Dim results() As Object = Me.Invoke("Formato_da161a", New Object() {_da161a})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Formato_da161aAsync(ByVal _da161a As Integer)
            Me.Formato_da161aAsync(_da161a, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Formato_da161aAsync(ByVal _da161a As Integer, ByVal userState As Object)
            If (Me.Formato_da161aOperationCompleted Is Nothing) Then
                Me.Formato_da161aOperationCompleted = AddressOf Me.OnFormato_da161aOperationCompleted
            End If
            Me.InvokeAsync("Formato_da161a", New Object() {_da161a}, Me.Formato_da161aOperationCompleted, userState)
        End Sub
        
        Private Sub OnFormato_da161aOperationCompleted(ByVal arg As Object)
            If (Not (Me.Formato_da161aCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Formato_da161aCompleted(Me, New Formato_da161aCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Formato_mes", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Formato_mes_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Formato_mes(ByVal _mes As Integer) As <System.Xml.Serialization.XmlElementAttribute("return_value")> String
            Dim results() As Object = Me.Invoke("Formato_mes", New Object() {_mes})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Formato_mesAsync(ByVal _mes As Integer)
            Me.Formato_mesAsync(_mes, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Formato_mesAsync(ByVal _mes As Integer, ByVal userState As Object)
            If (Me.Formato_mesOperationCompleted Is Nothing) Then
                Me.Formato_mesOperationCompleted = AddressOf Me.OnFormato_mesOperationCompleted
            End If
            Me.InvokeAsync("Formato_mes", New Object() {_mes}, Me.Formato_mesOperationCompleted, userState)
        End Sub
        
        Private Sub OnFormato_mesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Formato_mesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Formato_mesCompleted(Me, New Formato_mesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Formato_anyo", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Formato_anyo_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Formato_anyo(ByVal _anyo As Integer) As <System.Xml.Serialization.XmlElementAttribute("return_value")> String
            Dim results() As Object = Me.Invoke("Formato_anyo", New Object() {_anyo})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Formato_anyoAsync(ByVal _anyo As Integer)
            Me.Formato_anyoAsync(_anyo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Formato_anyoAsync(ByVal _anyo As Integer, ByVal userState As Object)
            If (Me.Formato_anyoOperationCompleted Is Nothing) Then
                Me.Formato_anyoOperationCompleted = AddressOf Me.OnFormato_anyoOperationCompleted
            End If
            Me.InvokeAsync("Formato_anyo", New Object() {_anyo}, Me.Formato_anyoOperationCompleted, userState)
        End Sub
        
        Private Sub OnFormato_anyoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Formato_anyoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Formato_anyoCompleted(Me, New Formato_anyoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Correo_Resumen_Dia", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Correo_Resumen_Dia_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Correo_Resumen_Dia(<System.Xml.Serialization.XmlElementAttribute(DataType:="date")> ByVal xFecha As Date)
            Me.Invoke("Correo_Resumen_Dia", New Object() {xFecha})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Correo_Resumen_DiaAsync(ByVal xFecha As Date)
            Me.Correo_Resumen_DiaAsync(xFecha, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Correo_Resumen_DiaAsync(ByVal xFecha As Date, ByVal userState As Object)
            If (Me.Correo_Resumen_DiaOperationCompleted Is Nothing) Then
                Me.Correo_Resumen_DiaOperationCompleted = AddressOf Me.OnCorreo_Resumen_DiaOperationCompleted
            End If
            Me.InvokeAsync("Correo_Resumen_Dia", New Object() {xFecha}, Me.Correo_Resumen_DiaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCorreo_Resumen_DiaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Correo_Resumen_DiaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Correo_Resumen_DiaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Correo_Diario_Mantenimiento", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Correo_Diario_Mantenimiento_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Correo_Diario_Mantenimiento()
            Me.Invoke("Correo_Diario_Mantenimiento", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Correo_Diario_MantenimientoAsync()
            Me.Correo_Diario_MantenimientoAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Correo_Diario_MantenimientoAsync(ByVal userState As Object)
            If (Me.Correo_Diario_MantenimientoOperationCompleted Is Nothing) Then
                Me.Correo_Diario_MantenimientoOperationCompleted = AddressOf Me.OnCorreo_Diario_MantenimientoOperationCompleted
            End If
            Me.InvokeAsync("Correo_Diario_Mantenimiento", New Object(-1) {}, Me.Correo_Diario_MantenimientoOperationCompleted, userState)
        End Sub
        
        Private Sub OnCorreo_Diario_MantenimientoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Correo_Diario_MantenimientoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Correo_Diario_MantenimientoCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Correo_OTM_Pendientes", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Correo_OTM_Pendientes_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Correo_OTM_Pendientes()
            Me.Invoke("Correo_OTM_Pendientes", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Correo_OTM_PendientesAsync()
            Me.Correo_OTM_PendientesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Correo_OTM_PendientesAsync(ByVal userState As Object)
            If (Me.Correo_OTM_PendientesOperationCompleted Is Nothing) Then
                Me.Correo_OTM_PendientesOperationCompleted = AddressOf Me.OnCorreo_OTM_PendientesOperationCompleted
            End If
            Me.InvokeAsync("Correo_OTM_Pendientes", New Object(-1) {}, Me.Correo_OTM_PendientesOperationCompleted, userState)
        End Sub
        
        Private Sub OnCorreo_OTM_PendientesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Correo_OTM_PendientesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Correo_OTM_PendientesCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Minutos_Rotura_Dia", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Minutos_Rotura_Dia_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Minutos_Rotura_Dia(<System.Xml.Serialization.XmlElementAttribute(DataType:="date")> ByVal fechaBucle As Date) As <System.Xml.Serialization.XmlElementAttribute("return_value")> Integer
            Dim results() As Object = Me.Invoke("Minutos_Rotura_Dia", New Object() {fechaBucle})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Minutos_Rotura_DiaAsync(ByVal fechaBucle As Date)
            Me.Minutos_Rotura_DiaAsync(fechaBucle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Minutos_Rotura_DiaAsync(ByVal fechaBucle As Date, ByVal userState As Object)
            If (Me.Minutos_Rotura_DiaOperationCompleted Is Nothing) Then
                Me.Minutos_Rotura_DiaOperationCompleted = AddressOf Me.OnMinutos_Rotura_DiaOperationCompleted
            End If
            Me.InvokeAsync("Minutos_Rotura_Dia", New Object() {fechaBucle}, Me.Minutos_Rotura_DiaOperationCompleted, userState)
        End Sub
        
        Private Sub OnMinutos_Rotura_DiaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Minutos_Rotura_DiaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Minutos_Rotura_DiaCompleted(Me, New Minutos_Rotura_DiaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Minutos_Paro_Turno", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Minutos_Paro_Turno_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Minutos_Paro_Turno(<System.Xml.Serialization.XmlElementAttribute(DataType:="date")> ByVal fecha As Date, ByVal filtroHorario As Integer) As <System.Xml.Serialization.XmlElementAttribute("return_value")> Integer
            Dim results() As Object = Me.Invoke("Minutos_Paro_Turno", New Object() {fecha, filtroHorario})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Minutos_Paro_TurnoAsync(ByVal fecha As Date, ByVal filtroHorario As Integer)
            Me.Minutos_Paro_TurnoAsync(fecha, filtroHorario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Minutos_Paro_TurnoAsync(ByVal fecha As Date, ByVal filtroHorario As Integer, ByVal userState As Object)
            If (Me.Minutos_Paro_TurnoOperationCompleted Is Nothing) Then
                Me.Minutos_Paro_TurnoOperationCompleted = AddressOf Me.OnMinutos_Paro_TurnoOperationCompleted
            End If
            Me.InvokeAsync("Minutos_Paro_Turno", New Object() {fecha, filtroHorario}, Me.Minutos_Paro_TurnoOperationCompleted, userState)
        End Sub
        
        Private Sub OnMinutos_Paro_TurnoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Minutos_Paro_TurnoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Minutos_Paro_TurnoCompleted(Me, New Minutos_Paro_TurnoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Num_Paros_Turno", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Num_Paros_Turno_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Num_Paros_Turno(<System.Xml.Serialization.XmlElementAttribute(DataType:="date")> ByVal fecha As Date, ByVal filtroHorario As Integer) As <System.Xml.Serialization.XmlElementAttribute("return_value")> Integer
            Dim results() As Object = Me.Invoke("Num_Paros_Turno", New Object() {fecha, filtroHorario})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Num_Paros_TurnoAsync(ByVal fecha As Date, ByVal filtroHorario As Integer)
            Me.Num_Paros_TurnoAsync(fecha, filtroHorario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Num_Paros_TurnoAsync(ByVal fecha As Date, ByVal filtroHorario As Integer, ByVal userState As Object)
            If (Me.Num_Paros_TurnoOperationCompleted Is Nothing) Then
                Me.Num_Paros_TurnoOperationCompleted = AddressOf Me.OnNum_Paros_TurnoOperationCompleted
            End If
            Me.InvokeAsync("Num_Paros_Turno", New Object() {fecha, filtroHorario}, Me.Num_Paros_TurnoOperationCompleted, userState)
        End Sub
        
        Private Sub OnNum_Paros_TurnoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Num_Paros_TurnoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Num_Paros_TurnoCompleted(Me, New Num_Paros_TurnoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Iniciar_Colas", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Iniciar_Colas_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Iniciar_Colas()
            Me.Invoke("Iniciar_Colas", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Iniciar_ColasAsync()
            Me.Iniciar_ColasAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Iniciar_ColasAsync(ByVal userState As Object)
            If (Me.Iniciar_ColasOperationCompleted Is Nothing) Then
                Me.Iniciar_ColasOperationCompleted = AddressOf Me.OnIniciar_ColasOperationCompleted
            End If
            Me.InvokeAsync("Iniciar_Colas", New Object(-1) {}, Me.Iniciar_ColasOperationCompleted, userState)
        End Sub
        
        Private Sub OnIniciar_ColasOperationCompleted(ByVal arg As Object)
            If (Not (Me.Iniciar_ColasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Iniciar_ColasCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Crear_OP_Fecha", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Crear_OP_Fecha_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Crear_OP_Fecha(ByVal pedido As String, ByVal la161nea As Integer, ByVal referencia As String, ByVal variante As String, ByVal almaca130n As String, ByVal cantidad As Decimal, ByVal refExterna As String, ByVal observaciones As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="date")> ByVal fecha As Date) As <System.Xml.Serialization.XmlElementAttribute("return_value")> String
            Dim results() As Object = Me.Invoke("Crear_OP_Fecha", New Object() {pedido, la161nea, referencia, variante, almaca130n, cantidad, refExterna, observaciones, fecha})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Crear_OP_FechaAsync(ByVal pedido As String, ByVal la161nea As Integer, ByVal referencia As String, ByVal variante As String, ByVal almaca130n As String, ByVal cantidad As Decimal, ByVal refExterna As String, ByVal observaciones As String, ByVal fecha As Date)
            Me.Crear_OP_FechaAsync(pedido, la161nea, referencia, variante, almaca130n, cantidad, refExterna, observaciones, fecha, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Crear_OP_FechaAsync(ByVal pedido As String, ByVal la161nea As Integer, ByVal referencia As String, ByVal variante As String, ByVal almaca130n As String, ByVal cantidad As Decimal, ByVal refExterna As String, ByVal observaciones As String, ByVal fecha As Date, ByVal userState As Object)
            If (Me.Crear_OP_FechaOperationCompleted Is Nothing) Then
                Me.Crear_OP_FechaOperationCompleted = AddressOf Me.OnCrear_OP_FechaOperationCompleted
            End If
            Me.InvokeAsync("Crear_OP_Fecha", New Object() {pedido, la161nea, referencia, variante, almaca130n, cantidad, refExterna, observaciones, fecha}, Me.Crear_OP_FechaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCrear_OP_FechaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Crear_OP_FechaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Crear_OP_FechaCompleted(Me, New Crear_OP_FechaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Correo_Lab_Variantes", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Correo_Lab_Variantes_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Correo_Lab_Variantes()
            Me.Invoke("Correo_Lab_Variantes", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Correo_Lab_VariantesAsync()
            Me.Correo_Lab_VariantesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Correo_Lab_VariantesAsync(ByVal userState As Object)
            If (Me.Correo_Lab_VariantesOperationCompleted Is Nothing) Then
                Me.Correo_Lab_VariantesOperationCompleted = AddressOf Me.OnCorreo_Lab_VariantesOperationCompleted
            End If
            Me.InvokeAsync("Correo_Lab_Variantes", New Object(-1) {}, Me.Correo_Lab_VariantesOperationCompleted, userState)
        End Sub
        
        Private Sub OnCorreo_Lab_VariantesOperationCompleted(ByVal arg As Object)
            If (Not (Me.Correo_Lab_VariantesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Correo_Lab_VariantesCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Correo_Albaran_Lab_Prueba", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Correo_Albaran_Lab_Prueba_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Correo_Albaran_Lab_Prueba(ByVal xDoc As String)
            Me.Invoke("Correo_Albaran_Lab_Prueba", New Object() {xDoc})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Correo_Albaran_Lab_PruebaAsync(ByVal xDoc As String)
            Me.Correo_Albaran_Lab_PruebaAsync(xDoc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Correo_Albaran_Lab_PruebaAsync(ByVal xDoc As String, ByVal userState As Object)
            If (Me.Correo_Albaran_Lab_PruebaOperationCompleted Is Nothing) Then
                Me.Correo_Albaran_Lab_PruebaOperationCompleted = AddressOf Me.OnCorreo_Albaran_Lab_PruebaOperationCompleted
            End If
            Me.InvokeAsync("Correo_Albaran_Lab_Prueba", New Object() {xDoc}, Me.Correo_Albaran_Lab_PruebaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCorreo_Albaran_Lab_PruebaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Correo_Albaran_Lab_PruebaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Correo_Albaran_Lab_PruebaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Calcular_peso_Bobinadora", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Calcular_peso_Bobinadora_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Calcular_peso_Bobinadora(<System.Xml.Serialization.XmlElementAttribute(DataType:="date")> ByVal xFecha As Date, ByVal xHorario As Integer) As <System.Xml.Serialization.XmlElementAttribute("return_value")> Decimal
            Dim results() As Object = Me.Invoke("Calcular_peso_Bobinadora", New Object() {xFecha, xHorario})
            Return CType(results(0),Decimal)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Calcular_peso_BobinadoraAsync(ByVal xFecha As Date, ByVal xHorario As Integer)
            Me.Calcular_peso_BobinadoraAsync(xFecha, xHorario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Calcular_peso_BobinadoraAsync(ByVal xFecha As Date, ByVal xHorario As Integer, ByVal userState As Object)
            If (Me.Calcular_peso_BobinadoraOperationCompleted Is Nothing) Then
                Me.Calcular_peso_BobinadoraOperationCompleted = AddressOf Me.OnCalcular_peso_BobinadoraOperationCompleted
            End If
            Me.InvokeAsync("Calcular_peso_Bobinadora", New Object() {xFecha, xHorario}, Me.Calcular_peso_BobinadoraOperationCompleted, userState)
        End Sub
        
        Private Sub OnCalcular_peso_BobinadoraOperationCompleted(ByVal arg As Object)
            If (Not (Me.Calcular_peso_BobinadoraCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Calcular_peso_BobinadoraCompleted(Me, New Calcular_peso_BobinadoraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Calcular_peso_Bobinadora_dia", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Calcular_peso_Bobinadora_dia_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Calcular_peso_Bobinadora_dia(<System.Xml.Serialization.XmlElementAttribute(DataType:="date")> ByVal xFecha As Date) As <System.Xml.Serialization.XmlElementAttribute("return_value")> Decimal
            Dim results() As Object = Me.Invoke("Calcular_peso_Bobinadora_dia", New Object() {xFecha})
            Return CType(results(0),Decimal)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Calcular_peso_Bobinadora_diaAsync(ByVal xFecha As Date)
            Me.Calcular_peso_Bobinadora_diaAsync(xFecha, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Calcular_peso_Bobinadora_diaAsync(ByVal xFecha As Date, ByVal userState As Object)
            If (Me.Calcular_peso_Bobinadora_diaOperationCompleted Is Nothing) Then
                Me.Calcular_peso_Bobinadora_diaOperationCompleted = AddressOf Me.OnCalcular_peso_Bobinadora_diaOperationCompleted
            End If
            Me.InvokeAsync("Calcular_peso_Bobinadora_dia", New Object() {xFecha}, Me.Calcular_peso_Bobinadora_diaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCalcular_peso_Bobinadora_diaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Calcular_peso_Bobinadora_diaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Calcular_peso_Bobinadora_diaCompleted(Me, New Calcular_peso_Bobinadora_diaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Minutos_Paro_Turno_New", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Minutos_Paro_Turno_New_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Minutos_Paro_Turno_New(<System.Xml.Serialization.XmlElementAttribute(DataType:="date")> ByVal fecha As Date, ByVal filtroHorario As Integer) As <System.Xml.Serialization.XmlElementAttribute("return_value")> Integer
            Dim results() As Object = Me.Invoke("Minutos_Paro_Turno_New", New Object() {fecha, filtroHorario})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Minutos_Paro_Turno_NewAsync(ByVal fecha As Date, ByVal filtroHorario As Integer)
            Me.Minutos_Paro_Turno_NewAsync(fecha, filtroHorario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Minutos_Paro_Turno_NewAsync(ByVal fecha As Date, ByVal filtroHorario As Integer, ByVal userState As Object)
            If (Me.Minutos_Paro_Turno_NewOperationCompleted Is Nothing) Then
                Me.Minutos_Paro_Turno_NewOperationCompleted = AddressOf Me.OnMinutos_Paro_Turno_NewOperationCompleted
            End If
            Me.InvokeAsync("Minutos_Paro_Turno_New", New Object() {fecha, filtroHorario}, Me.Minutos_Paro_Turno_NewOperationCompleted, userState)
        End Sub
        
        Private Sub OnMinutos_Paro_Turno_NewOperationCompleted(ByVal arg As Object)
            If (Not (Me.Minutos_Paro_Turno_NewCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Minutos_Paro_Turno_NewCompleted(Me, New Minutos_Paro_Turno_NewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Minutos_Rotura_Dia_New", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Minutos_Rotura_Dia_New_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Minutos_Rotura_Dia_New(<System.Xml.Serialization.XmlElementAttribute(DataType:="date")> ByVal fechaBucle As Date) As <System.Xml.Serialization.XmlElementAttribute("return_value")> Integer
            Dim results() As Object = Me.Invoke("Minutos_Rotura_Dia_New", New Object() {fechaBucle})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Minutos_Rotura_Dia_NewAsync(ByVal fechaBucle As Date)
            Me.Minutos_Rotura_Dia_NewAsync(fechaBucle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Minutos_Rotura_Dia_NewAsync(ByVal fechaBucle As Date, ByVal userState As Object)
            If (Me.Minutos_Rotura_Dia_NewOperationCompleted Is Nothing) Then
                Me.Minutos_Rotura_Dia_NewOperationCompleted = AddressOf Me.OnMinutos_Rotura_Dia_NewOperationCompleted
            End If
            Me.InvokeAsync("Minutos_Rotura_Dia_New", New Object() {fechaBucle}, Me.Minutos_Rotura_Dia_NewOperationCompleted, userState)
        End Sub
        
        Private Sub OnMinutos_Rotura_Dia_NewOperationCompleted(ByVal arg As Object)
            If (Not (Me.Minutos_Rotura_Dia_NewCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Minutos_Rotura_Dia_NewCompleted(Me, New Minutos_Rotura_Dia_NewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Parada_Fin_Turno", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Parada_Fin_Turno_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Parada_Fin_Turno(<System.Xml.Serialization.XmlElementAttribute(DataType:="date")> ByVal fecha As Date, ByVal filtroHorario As Integer) As <System.Xml.Serialization.XmlElementAttribute("return_value")> Boolean
            Dim results() As Object = Me.Invoke("Parada_Fin_Turno", New Object() {fecha, filtroHorario})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Parada_Fin_TurnoAsync(ByVal fecha As Date, ByVal filtroHorario As Integer)
            Me.Parada_Fin_TurnoAsync(fecha, filtroHorario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Parada_Fin_TurnoAsync(ByVal fecha As Date, ByVal filtroHorario As Integer, ByVal userState As Object)
            If (Me.Parada_Fin_TurnoOperationCompleted Is Nothing) Then
                Me.Parada_Fin_TurnoOperationCompleted = AddressOf Me.OnParada_Fin_TurnoOperationCompleted
            End If
            Me.InvokeAsync("Parada_Fin_Turno", New Object() {fecha, filtroHorario}, Me.Parada_Fin_TurnoOperationCompleted, userState)
        End Sub
        
        Private Sub OnParada_Fin_TurnoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Parada_Fin_TurnoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Parada_Fin_TurnoCompleted(Me, New Parada_Fin_TurnoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Plan_Verificacion_Ask", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Plan_Verificacion_Ask_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Plan_Verificacion_Ask(ByVal xCliente As String) As <System.Xml.Serialization.XmlElementAttribute("return_value")> Boolean
            Dim results() As Object = Me.Invoke("Plan_Verificacion_Ask", New Object() {xCliente})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Plan_Verificacion_AskAsync(ByVal xCliente As String)
            Me.Plan_Verificacion_AskAsync(xCliente, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Plan_Verificacion_AskAsync(ByVal xCliente As String, ByVal userState As Object)
            If (Me.Plan_Verificacion_AskOperationCompleted Is Nothing) Then
                Me.Plan_Verificacion_AskOperationCompleted = AddressOf Me.OnPlan_Verificacion_AskOperationCompleted
            End If
            Me.InvokeAsync("Plan_Verificacion_Ask", New Object() {xCliente}, Me.Plan_Verificacion_AskOperationCompleted, userState)
        End Sub
        
        Private Sub OnPlan_Verificacion_AskOperationCompleted(ByVal arg As Object)
            If (Not (Me.Plan_Verificacion_AskCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Plan_Verificacion_AskCompleted(Me, New Plan_Verificacion_AskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Plan_Verificacion_Counter", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Plan_Verificacion_Counter_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Plan_Verificacion_Counter(ByVal xCliente As String)
            Me.Invoke("Plan_Verificacion_Counter", New Object() {xCliente})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Plan_Verificacion_CounterAsync(ByVal xCliente As String)
            Me.Plan_Verificacion_CounterAsync(xCliente, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Plan_Verificacion_CounterAsync(ByVal xCliente As String, ByVal userState As Object)
            If (Me.Plan_Verificacion_CounterOperationCompleted Is Nothing) Then
                Me.Plan_Verificacion_CounterOperationCompleted = AddressOf Me.OnPlan_Verificacion_CounterOperationCompleted
            End If
            Me.InvokeAsync("Plan_Verificacion_Counter", New Object() {xCliente}, Me.Plan_Verificacion_CounterOperationCompleted, userState)
        End Sub
        
        Private Sub OnPlan_Verificacion_CounterOperationCompleted(ByVal arg As Object)
            If (Not (Me.Plan_Verificacion_CounterCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Plan_Verificacion_CounterCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Plan_Verificacion_Insertar", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Plan_Verificacion_Insertar_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Plan_Verificacion_Insertar(ByVal xPalet As Integer, ByVal xOF As String, ByVal xPlan As String, ByVal xLine As Integer, ByVal xOK As Boolean, ByVal xTexto As String)
            Me.Invoke("Plan_Verificacion_Insertar", New Object() {xPalet, xOF, xPlan, xLine, xOK, xTexto})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Plan_Verificacion_InsertarAsync(ByVal xPalet As Integer, ByVal xOF As String, ByVal xPlan As String, ByVal xLine As Integer, ByVal xOK As Boolean, ByVal xTexto As String)
            Me.Plan_Verificacion_InsertarAsync(xPalet, xOF, xPlan, xLine, xOK, xTexto, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Plan_Verificacion_InsertarAsync(ByVal xPalet As Integer, ByVal xOF As String, ByVal xPlan As String, ByVal xLine As Integer, ByVal xOK As Boolean, ByVal xTexto As String, ByVal userState As Object)
            If (Me.Plan_Verificacion_InsertarOperationCompleted Is Nothing) Then
                Me.Plan_Verificacion_InsertarOperationCompleted = AddressOf Me.OnPlan_Verificacion_InsertarOperationCompleted
            End If
            Me.InvokeAsync("Plan_Verificacion_Insertar", New Object() {xPalet, xOF, xPlan, xLine, xOK, xTexto}, Me.Plan_Verificacion_InsertarOperationCompleted, userState)
        End Sub
        
        Private Sub OnPlan_Verificacion_InsertarOperationCompleted(ByVal arg As Object)
            If (Not (Me.Plan_Verificacion_InsertarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Plan_Verificacion_InsertarCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Plan_Verificacion_Insertar2", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Plan_Verificacion_Insertar2_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Plan_Verificacion_Insertar2(ByVal xTexto As String)
            Me.Invoke("Plan_Verificacion_Insertar2", New Object() {xTexto})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Plan_Verificacion_Insertar2Async(ByVal xTexto As String)
            Me.Plan_Verificacion_Insertar2Async(xTexto, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Plan_Verificacion_Insertar2Async(ByVal xTexto As String, ByVal userState As Object)
            If (Me.Plan_Verificacion_Insertar2OperationCompleted Is Nothing) Then
                Me.Plan_Verificacion_Insertar2OperationCompleted = AddressOf Me.OnPlan_Verificacion_Insertar2OperationCompleted
            End If
            Me.InvokeAsync("Plan_Verificacion_Insertar2", New Object() {xTexto}, Me.Plan_Verificacion_Insertar2OperationCompleted, userState)
        End Sub
        
        Private Sub OnPlan_Verificacion_Insertar2OperationCompleted(ByVal arg As Object)
            If (Not (Me.Plan_Verificacion_Insertar2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Plan_Verificacion_Insertar2Completed(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Plan_Verificacion_Borrar", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Plan_Verificacion_Borrar_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Plan_Verificacion_Borrar(ByVal xPalet As Integer)
            Me.Invoke("Plan_Verificacion_Borrar", New Object() {xPalet})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Plan_Verificacion_BorrarAsync(ByVal xPalet As Integer)
            Me.Plan_Verificacion_BorrarAsync(xPalet, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Plan_Verificacion_BorrarAsync(ByVal xPalet As Integer, ByVal userState As Object)
            If (Me.Plan_Verificacion_BorrarOperationCompleted Is Nothing) Then
                Me.Plan_Verificacion_BorrarOperationCompleted = AddressOf Me.OnPlan_Verificacion_BorrarOperationCompleted
            End If
            Me.InvokeAsync("Plan_Verificacion_Borrar", New Object() {xPalet}, Me.Plan_Verificacion_BorrarOperationCompleted, userState)
        End Sub
        
        Private Sub OnPlan_Verificacion_BorrarOperationCompleted(ByVal arg As Object)
            If (Not (Me.Plan_Verificacion_BorrarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Plan_Verificacion_BorrarCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Plan_Verificacion_Existe", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Plan_Verificacion_Existe_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Plan_Verificacion_Existe(ByVal xPalet As Integer) As <System.Xml.Serialization.XmlElementAttribute("return_value")> Boolean
            Dim results() As Object = Me.Invoke("Plan_Verificacion_Existe", New Object() {xPalet})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Plan_Verificacion_ExisteAsync(ByVal xPalet As Integer)
            Me.Plan_Verificacion_ExisteAsync(xPalet, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Plan_Verificacion_ExisteAsync(ByVal xPalet As Integer, ByVal userState As Object)
            If (Me.Plan_Verificacion_ExisteOperationCompleted Is Nothing) Then
                Me.Plan_Verificacion_ExisteOperationCompleted = AddressOf Me.OnPlan_Verificacion_ExisteOperationCompleted
            End If
            Me.InvokeAsync("Plan_Verificacion_Existe", New Object() {xPalet}, Me.Plan_Verificacion_ExisteOperationCompleted, userState)
        End Sub
        
        Private Sub OnPlan_Verificacion_ExisteOperationCompleted(ByVal arg As Object)
            If (Not (Me.Plan_Verificacion_ExisteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Plan_Verificacion_ExisteCompleted(Me, New Plan_Verificacion_ExisteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Plan_Verificacion_Rechazo", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Plan_Verificacion_Rechazo_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Plan_Verificacion_Rechazo(ByVal xPalet As Integer, ByRef xPulper As Boolean, ByRef xDesclasificado As Boolean)
            Dim results() As Object = Me.Invoke("Plan_Verificacion_Rechazo", New Object() {xPalet, xPulper, xDesclasificado})
            xPulper = CType(results(0),Boolean)
            xDesclasificado = CType(results(1),Boolean)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Plan_Verificacion_RechazoAsync(ByVal xPalet As Integer, ByVal xPulper As Boolean, ByVal xDesclasificado As Boolean)
            Me.Plan_Verificacion_RechazoAsync(xPalet, xPulper, xDesclasificado, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Plan_Verificacion_RechazoAsync(ByVal xPalet As Integer, ByVal xPulper As Boolean, ByVal xDesclasificado As Boolean, ByVal userState As Object)
            If (Me.Plan_Verificacion_RechazoOperationCompleted Is Nothing) Then
                Me.Plan_Verificacion_RechazoOperationCompleted = AddressOf Me.OnPlan_Verificacion_RechazoOperationCompleted
            End If
            Me.InvokeAsync("Plan_Verificacion_Rechazo", New Object() {xPalet, xPulper, xDesclasificado}, Me.Plan_Verificacion_RechazoOperationCompleted, userState)
        End Sub
        
        Private Sub OnPlan_Verificacion_RechazoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Plan_Verificacion_RechazoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Plan_Verificacion_RechazoCompleted(Me, New Plan_Verificacion_RechazoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Cambio_Rollo", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Cambio_Rollo_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Cambio_Rollo(ByVal xRollo As Integer, ByVal xAnchoRodaja As Decimal, ByVal xAnchoMandril As Decimal, ByVal xRojadaDura As Boolean)
            Me.Invoke("Cambio_Rollo", New Object() {xRollo, xAnchoRodaja, xAnchoMandril, xRojadaDura})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Cambio_RolloAsync(ByVal xRollo As Integer, ByVal xAnchoRodaja As Decimal, ByVal xAnchoMandril As Decimal, ByVal xRojadaDura As Boolean)
            Me.Cambio_RolloAsync(xRollo, xAnchoRodaja, xAnchoMandril, xRojadaDura, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Cambio_RolloAsync(ByVal xRollo As Integer, ByVal xAnchoRodaja As Decimal, ByVal xAnchoMandril As Decimal, ByVal xRojadaDura As Boolean, ByVal userState As Object)
            If (Me.Cambio_RolloOperationCompleted Is Nothing) Then
                Me.Cambio_RolloOperationCompleted = AddressOf Me.OnCambio_RolloOperationCompleted
            End If
            Me.InvokeAsync("Cambio_Rollo", New Object() {xRollo, xAnchoRodaja, xAnchoMandril, xRojadaDura}, Me.Cambio_RolloOperationCompleted, userState)
        End Sub
        
        Private Sub OnCambio_RolloOperationCompleted(ByVal arg As Object)
            If (Not (Me.Cambio_RolloCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Cambio_RolloCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Minutos_Rotura_Dia_10", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Minutos_Rotura_Dia_10_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Minutos_Rotura_Dia_10(<System.Xml.Serialization.XmlElementAttribute(DataType:="date")> ByVal fechaBucle As Date) As <System.Xml.Serialization.XmlElementAttribute("return_value")> Integer
            Dim results() As Object = Me.Invoke("Minutos_Rotura_Dia_10", New Object() {fechaBucle})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Minutos_Rotura_Dia_10Async(ByVal fechaBucle As Date)
            Me.Minutos_Rotura_Dia_10Async(fechaBucle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Minutos_Rotura_Dia_10Async(ByVal fechaBucle As Date, ByVal userState As Object)
            If (Me.Minutos_Rotura_Dia_10OperationCompleted Is Nothing) Then
                Me.Minutos_Rotura_Dia_10OperationCompleted = AddressOf Me.OnMinutos_Rotura_Dia_10OperationCompleted
            End If
            Me.InvokeAsync("Minutos_Rotura_Dia_10", New Object() {fechaBucle}, Me.Minutos_Rotura_Dia_10OperationCompleted, userState)
        End Sub
        
        Private Sub OnMinutos_Rotura_Dia_10OperationCompleted(ByVal arg As Object)
            If (Not (Me.Minutos_Rotura_Dia_10CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Minutos_Rotura_Dia_10Completed(Me, New Minutos_Rotura_Dia_10CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Correo_Resumen_Turno_Prueba", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Correo_Resumen_Turno_Prueba_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Correo_Resumen_Turno_Prueba(<System.Xml.Serialization.XmlElementAttribute(DataType:="date")> ByVal xFecha As Date, ByVal xTurno As Integer)
            Me.Invoke("Correo_Resumen_Turno_Prueba", New Object() {xFecha, xTurno})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Correo_Resumen_Turno_PruebaAsync(ByVal xFecha As Date, ByVal xTurno As Integer)
            Me.Correo_Resumen_Turno_PruebaAsync(xFecha, xTurno, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Correo_Resumen_Turno_PruebaAsync(ByVal xFecha As Date, ByVal xTurno As Integer, ByVal userState As Object)
            If (Me.Correo_Resumen_Turno_PruebaOperationCompleted Is Nothing) Then
                Me.Correo_Resumen_Turno_PruebaOperationCompleted = AddressOf Me.OnCorreo_Resumen_Turno_PruebaOperationCompleted
            End If
            Me.InvokeAsync("Correo_Resumen_Turno_Prueba", New Object() {xFecha, xTurno}, Me.Correo_Resumen_Turno_PruebaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCorreo_Resumen_Turno_PruebaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Correo_Resumen_Turno_PruebaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Correo_Resumen_Turno_PruebaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Correo_Resumen_Dia_Prueba", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Correo_Resumen_Dia_Prueba_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Correo_Resumen_Dia_Prueba(<System.Xml.Serialization.XmlElementAttribute(DataType:="date")> ByVal xFecha As Date)
            Me.Invoke("Correo_Resumen_Dia_Prueba", New Object() {xFecha})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Correo_Resumen_Dia_PruebaAsync(ByVal xFecha As Date)
            Me.Correo_Resumen_Dia_PruebaAsync(xFecha, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Correo_Resumen_Dia_PruebaAsync(ByVal xFecha As Date, ByVal userState As Object)
            If (Me.Correo_Resumen_Dia_PruebaOperationCompleted Is Nothing) Then
                Me.Correo_Resumen_Dia_PruebaOperationCompleted = AddressOf Me.OnCorreo_Resumen_Dia_PruebaOperationCompleted
            End If
            Me.InvokeAsync("Correo_Resumen_Dia_Prueba", New Object() {xFecha}, Me.Correo_Resumen_Dia_PruebaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCorreo_Resumen_Dia_PruebaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Correo_Resumen_Dia_PruebaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Correo_Resumen_Dia_PruebaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Web:Correo_Control_Stock", RequestNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", ResponseElementName:="Correo_Control_Stock_Result", ResponseNamespace:="urn:microsoft-dynamics-schemas/codeunit/Web", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Correo_Control_Stock(<System.Xml.Serialization.XmlElementAttribute(DataType:="date")> ByVal xFecha As Date)
            Me.Invoke("Correo_Control_Stock", New Object() {xFecha})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Correo_Control_StockAsync(ByVal xFecha As Date)
            Me.Correo_Control_StockAsync(xFecha, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Correo_Control_StockAsync(ByVal xFecha As Date, ByVal userState As Object)
            If (Me.Correo_Control_StockOperationCompleted Is Nothing) Then
                Me.Correo_Control_StockOperationCompleted = AddressOf Me.OnCorreo_Control_StockOperationCompleted
            End If
            Me.InvokeAsync("Correo_Control_Stock", New Object() {xFecha}, Me.Correo_Control_StockOperationCompleted, userState)
        End Sub
        
        Private Sub OnCorreo_Control_StockOperationCompleted(ByVal arg As Object)
            If (Not (Me.Correo_Control_StockCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Correo_Control_StockCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub CapitalizeCompletedEventHandler(ByVal sender As Object, ByVal e As CapitalizeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CapitalizeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Fecha_TrabajoCompletedEventHandler(ByVal sender As Object, ByVal e As Fecha_TrabajoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Fecha_TrabajoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Date
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Date)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub DiarioSalidaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub DiarioSalida2CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub DiarioSalida3CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub DiarioSalida4CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub DiarioSalida5CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub DiarioSalida6CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub DiarioSalida7CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub RechazosCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub ScrapCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub DiarioSalida_FruverPackCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Verificar_No_BobinaCompletedEventHandler(ByVal sender As Object, ByVal e As Verificar_No_BobinaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Verificar_No_BobinaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Verificar_Peso_BobinaCompletedEventHandler(ByVal sender As Object, ByVal e As Verificar_Peso_BobinaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Verificar_Peso_BobinaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Verificar_No_PaletCompletedEventHandler(ByVal sender As Object, ByVal e As Verificar_No_PaletCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Verificar_No_PaletCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Peso_OF_BobinaCompletedEventHandler(ByVal sender As Object, ByVal e As Peso_OF_BobinaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Peso_OF_BobinaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub XML_Peso_BobinaCompletedEventHandler(ByVal sender As Object, ByVal e As XML_Peso_BobinaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class XML_Peso_BobinaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub EliminarDiarioSalidaCompletedEventHandler(ByVal sender As Object, ByVal e As EliminarDiarioSalidaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EliminarDiarioSalidaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Correo_BasculaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Baja_Papel2aStockCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Baja_Papel2aDiarioCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Baja_Papel2aCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Abrir_OPCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Cambiar_PaletCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Crear_OPCompletedEventHandler(ByVal sender As Object, ByVal e As Crear_OPCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Crear_OPCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Correo_PesajeCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Copiar_ProyectosCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Correo_Resumen_TurnoCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Formato_da161aCompletedEventHandler(ByVal sender As Object, ByVal e As Formato_da161aCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Formato_da161aCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Formato_mesCompletedEventHandler(ByVal sender As Object, ByVal e As Formato_mesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Formato_mesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Formato_anyoCompletedEventHandler(ByVal sender As Object, ByVal e As Formato_anyoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Formato_anyoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Correo_Resumen_DiaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Correo_Diario_MantenimientoCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Correo_OTM_PendientesCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Minutos_Rotura_DiaCompletedEventHandler(ByVal sender As Object, ByVal e As Minutos_Rotura_DiaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Minutos_Rotura_DiaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Minutos_Paro_TurnoCompletedEventHandler(ByVal sender As Object, ByVal e As Minutos_Paro_TurnoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Minutos_Paro_TurnoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Num_Paros_TurnoCompletedEventHandler(ByVal sender As Object, ByVal e As Num_Paros_TurnoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Num_Paros_TurnoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Iniciar_ColasCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Crear_OP_FechaCompletedEventHandler(ByVal sender As Object, ByVal e As Crear_OP_FechaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Crear_OP_FechaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Correo_Lab_VariantesCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Correo_Albaran_Lab_PruebaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Calcular_peso_BobinadoraCompletedEventHandler(ByVal sender As Object, ByVal e As Calcular_peso_BobinadoraCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Calcular_peso_BobinadoraCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Decimal
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Decimal)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Calcular_peso_Bobinadora_diaCompletedEventHandler(ByVal sender As Object, ByVal e As Calcular_peso_Bobinadora_diaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Calcular_peso_Bobinadora_diaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Decimal
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Decimal)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Minutos_Paro_Turno_NewCompletedEventHandler(ByVal sender As Object, ByVal e As Minutos_Paro_Turno_NewCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Minutos_Paro_Turno_NewCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Minutos_Rotura_Dia_NewCompletedEventHandler(ByVal sender As Object, ByVal e As Minutos_Rotura_Dia_NewCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Minutos_Rotura_Dia_NewCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Parada_Fin_TurnoCompletedEventHandler(ByVal sender As Object, ByVal e As Parada_Fin_TurnoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Parada_Fin_TurnoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Plan_Verificacion_AskCompletedEventHandler(ByVal sender As Object, ByVal e As Plan_Verificacion_AskCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Plan_Verificacion_AskCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Plan_Verificacion_CounterCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Plan_Verificacion_InsertarCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Plan_Verificacion_Insertar2CompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Plan_Verificacion_BorrarCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Plan_Verificacion_ExisteCompletedEventHandler(ByVal sender As Object, ByVal e As Plan_Verificacion_ExisteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Plan_Verificacion_ExisteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Plan_Verificacion_RechazoCompletedEventHandler(ByVal sender As Object, ByVal e As Plan_Verificacion_RechazoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Plan_Verificacion_RechazoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property xPulper() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property xDesclasificado() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Cambio_RolloCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Minutos_Rotura_Dia_10CompletedEventHandler(ByVal sender As Object, ByVal e As Minutos_Rotura_Dia_10CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Minutos_Rotura_Dia_10CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Correo_Resumen_Turno_PruebaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Correo_Resumen_Dia_PruebaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Correo_Control_StockCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
End Namespace
